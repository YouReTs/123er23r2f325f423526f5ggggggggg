#!/usr/bin/python
# -*- coding: utf-8 -*-

import telebot, re, os, time
from telebot import types
from logger import get_logger
#from flask import Flask, request
import datetime

log = get_logger("bot")


with open("TOKEN", "r") as tfile: # local run
    TOKEN = tfile.readline().strip('\n')
    log.info("[LOCAL] read token: '%s'" % TOKEN)
    tfile.close()

bot = telebot.TeleBot('5416667430:AAGiAixxU1UTyKFJNiDQhYrD0IWp2WyONuw')

BOT_USERNAME = 'raidpinbot'



@bot.message_handler(commands=['start', 'help'])
def command_starthelp(m):
    log.debug("User %s used command %s" % (m.from_user.username, m.text))
    text = "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! üëã\n" + \
           "–Ø - –±–æ—Ç-–∞–≤—Ç–æ–ø–∏–Ω–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π.\n" + \
           "–î–ª—è –º–æ–µ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –¥–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ —á–∞—Ç.\n" + \
           "–í–∞–∂–Ω–æ: –º–Ω–µ —Å–ª–µ–¥—É–µ—Ç –¥–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞ (—Ö–æ—Ç—è –±—ã –Ω–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π)!\n\n" + \
           "üìù –°–µ–π—á–∞—Å —è —Ä–∞–±–æ—Ç–∞—é —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ —Ä–µ–π–¥-–±–æ—Ç–∞–º–∏:\n" + \
           "- @RaidBattlesBot\n\n" + \
           "–ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ä–µ–π–¥–µ —è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä–µ–ø–ª—é –µ–≥–æ (—Å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞)."
    bot.send_message(m.chat.id, text)
#
# Bot should pin only raid messages (assume they should have reply_markup keyboard)


@bot.message_handler(func=lambda message: 'reply_markup' in message.json)
def check_raidmessage(m):
    log.debug("Detected potential raid message:")
    log.debug(str(m.json))
    is_raid = False
    # series of conditions to detect @RaidBattlesBot inline raid message
    rep_mkup = m.json['reply_markup']
    if 'inline_keyboard' in rep_mkup:
        kb = rep_mkup['inline_keyboard'][0]
        if 'switch_inline_query' in kb[-1]:
            # final check is by 'share' button existence in reply keyboard
            share_button = re.findall(r'^share:.*', kb[-1]['switch_inline_query'])
            if share_button != [] and len(share_button) == 1:
                is_raid = True
    if is_raid:
        log.debug("Raid message confirmed, pinning")
        time.sleep(1)
        bot.pin_chat_message(m.chat.id, m.message_id)
        log.debug("Message pinned: %s" % m.text)
    else:
        log.error("Not a raid message, skipping")


log.warning("Running locally, start polling")  # –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ, –Ω–∞—á–Ω–∏—Ç–µ –æ–ø—Ä–æ—Å
bot.polling(none_stop=True, interval=0, timeout=20)






#!/usr/bin/python
# -*- coding: utf-8 -*-

import telebot, re, os, time
from telebot import types
from logger import get_logger
#from flask import Flask, request
import datetime

log = get_logger("bot")


with open("TOKEN", "r") as tfile: # local run
    TOKEN = tfile.readline().strip('\n')
    log.info("[LOCAL] read token: '%s'" % TOKEN)
    tfile.close()

bot = telebot.TeleBot('TOKEN')

BOT_USERNAME = 'raidpinbot'


import user_config
import telebot
from telebot import apihelper
from telebot import types
import datetime
import os
import logging

logger = logging.getLogger('log')
logger.setLevel(logging.INFO)
fh = logging.FileHandler('someTestBot.log')
fh.setLevel(logging.DEBUG)
formatter = logging.Formatter("%(asctime)s | %(levelname)-7s | %(message)s")
fh.setFormatter(formatter)
logger.addHandler(fh)

# –ü—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä
#apihelper.proxy = {'https': 'socks5h://login:password@ip-host:port'}

# Token telegram bot
bot = telebot.TeleBot('5416667430:AAGiAixxU1UTyKFJNiDQhYrD0IWp2WyONuw', threaded=True)


# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
def autor(chatid):
    strid = str(chatid)
    for item in user_config.users:
        if item == strid:
            return True
    return False



@bot.message_handler(commands=['start'])
def start_message(message):
    #log.debug("User %s used command %s" % (m.from_user.username, m.text))
    if autor(message.chat.id):
        # log.debug("User %s used command %s" % (m.from_user.username, m.text))
        cid = message.chat.id
        message_text = message.text
        user_id = message.from_user.id
        user_name = message.from_user.first_name
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, ' + user_name + ' –ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç –º–µ–Ω—è, —Å–æ–±–∞–∫–∞ —Å—É—Ç—É–ª–∞—è!')
        bot.send_sticker(message.chat.id, 'CAADAgAD6CQAAp7OCwABx40TskPHi3MWBA')
    else:
        bot.send_message(message.chat.id, '–¢–µ–±–µ —Å—é–¥–∞ –Ω–µ–ª—å–∑—è. –¢–≤–æ–π ID: ' + str(message.chat.id))
        bot.send_sticker(message.chat.id, 'CAADAgADcQMAAkmH9Av0tmQ7QhjxLRYE')

@bot.message_handler(func=lambda message: 'reply_markup' in message.json)
def check_raidmessage(m):
    log.debug("Detected potential raid message:")
    log.debug(str(m.json))
    is_raid = False
    # series of conditions to detect @RaidBattlesBot inline raid message
    rep_mkup = m.json['reply_markup']
    if 'inline_keyboard' in rep_mkup:
        kb = rep_mkup['inline_keyboard'][0]
        if 'switch_inline_query' in kb[-1]:
            # final check is by 'share' button existence in reply keyboard
            share_button = re.findall(r'^share:.*', kb[-1]['switch_inline_query'])
            if share_button != [] and len(share_button) == 1:
                is_raid = True
    if is_raid:
        log.debug("Raid message confirmed, pinning")
        time.sleep(1)
        bot.pin_chat_message(m.chat.id, m.message_id)
        log.debug("Message pinned: %s" % m.text)
    else:
        log.error("Not a raid message, skipping")


log.warning("Running locally, start polling")  # –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ, –Ω–∞—á–Ω–∏—Ç–µ –æ–ø—Ä–æ—Å
bot.polling(none_stop=True, interval=0, timeout=20)
#    text = "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! üëã\n" + \
#           "–Ø - –±–æ—Ç-–∞–≤—Ç–æ–ø–∏–Ω–Ω–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π.\n" + \
#           "–î–ª—è –º–æ–µ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –¥–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ —á–∞—Ç.\n" + \
#           "–í–∞–∂–Ω–æ: –º–Ω–µ —Å–ª–µ–¥—É–µ—Ç –¥–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞ (—Ö–æ—Ç—è –±—ã –Ω–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π)!\n\n" + \
#           "üìù –°–µ–π—á–∞—Å —è —Ä–∞–±–æ—Ç–∞—é —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ —Ä–µ–π–¥-–±–æ—Ç–∞–º–∏:\n" + \
#           "- @RaidBattlesBot\n\n" + \
#           "–ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ä–µ–π–¥–µ —è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä–µ–ø–ª—é –µ–≥–æ (—Å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞)."
#    bot.send_message(message.chat.id, text)













bot.polling()